"use strict";const https=require("https");class FaceMatcherAPI{constructor(url){this.url=new URL(url)}enrol(face){if(!face||!face.id||!face.image){console.log(`enrolFace IllegalArgument`,face);throw new Error("IllegalArgument")}return new Promise((resolve,reject)=>{const data=JSON.stringify(face);const options={hostname:this.url.hostname,port:this.url.port,path:this.url.pathname,method:"POST",headers:{"Content-Type":"application/json","Content-Length":data.length}};this._post(data,options,resolve,reject)})}search(face){if(!face||!face.image){console.log(`searchFace IllegalArgument`,face);throw new Error("IllegalArgument")}return new Promise((resolve,reject)=>{const data=JSON.stringify(face);const options={hostname:this.url.hostname,port:this.url.port,path:this.url.pathname,method:"POST",headers:{"Content-Type":"application/json","Content-Length":data.length}};this._post(data,options,resolve,reject)})}_post(data,options,resolve,reject){const req=https.request(options,res=>{res.setEncoding("utf-8");let response="";res.on("data",function(data){response+=data});res.on("end",function(){console.log(response);resolve(response)})});req.on("error",e=>{reject(e.message)});req.write(data);req.end()}}global.FaceMatcherAPI=FaceMatcherAPI;